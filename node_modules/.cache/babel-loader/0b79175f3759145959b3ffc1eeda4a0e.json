{"ast":null,"code":"var _jsxFileName = \"/Users/jigmetashi/Desktop/tikttok-clone/tiktok/src/Video.js\";\nimport React, { useState } from 'react';\nimport './video.css';\n\nfunction Video({\n  videoSrc\n}) {\n  const [playing, setPlaying] = useState(false);\n  const videoRef = useRef(null);\n\n  const clickHandler = e => {\n    if (playing) {\n      videoRef.current.pause();\n      setPlaying(false);\n    } else {\n      videoRef.current.play();\n      setPlaying(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    className: \"videoPlayer\",\n    onClick: clickHandler,\n    loop: true,\n    src: videoSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Video;","map":{"version":3,"sources":["/Users/jigmetashi/Desktop/tikttok-clone/tiktok/src/Video.js"],"names":["React","useState","Video","videoSrc","playing","setPlaying","videoRef","useRef","clickHandler","e","current","pause","play"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;AACA,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAA2B;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMK,QAAQ,GAAGC,MAAM,CAAC,IAAD,CAAvB;;AACA,QAAMC,YAAY,GAAEC,CAAC,IAAI;AACrB,QAAGL,OAAH,EAAW;AACPE,MAAAA,QAAQ,CAACI,OAAT,CAAiBC,KAAjB;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD,MAGK;AACDC,MAAAA,QAAQ,CAACI,OAAT,CAAiBE,IAAjB;AACAP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GARD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,OAAO,EAAEG,YAAxC;AAAsD,IAAA,IAAI,MAA1D;AAA2D,IAAA,GAAG,EAAEL,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAED,eAAeD,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport './video.css';\nfunction Video({videoSrc}) {\n    const [playing, setPlaying] = useState(false);\n    const videoRef = useRef(null);\n    const clickHandler =e => {\n        if(playing){\n            videoRef.current.pause();\n            setPlaying(false)\n        }else{\n            videoRef.current.play();\n            setPlaying(true);\n        }\n    }\n    return (\n        <div className=\"video\">\n            <video className=\"videoPlayer\" onClick={clickHandler} loop src={videoSrc}></video>\n        </div>\n    )\n}\n\nexport default Video\n"]},"metadata":{},"sourceType":"module"}