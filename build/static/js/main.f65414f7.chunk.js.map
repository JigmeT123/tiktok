{"version":3,"sources":["VideoFooter.js","VideoSideBar.js","Video.js","App.js","serviceWorker.js","index.js"],"names":["VideoFooter","username","description","song","className","MusicNote","mode","index","src","alt","VideoSideBar","likes","shares","messages","useState","liked","setLiked","Favorite","fontSize","onClick","e","FavoriteBorder","Message","Share","Video","videoSrc","playing","setPlaying","videoRef","useRef","ref","current","pause","play","loop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mUA4BeA,MAxBf,YAAqD,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,YAAaC,EAAO,EAAPA,KACzC,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,qBACX,gCAAMH,GACN,2BAAIC,GACJ,yBAAKE,UAAU,uBACX,kBAACC,EAAA,EAAD,CAAWD,UAAU,sBACrB,kBAAC,IAAD,CAAQE,KAAK,WACZ,cAAEC,MAAF,OACG,oCACI,uBAAGH,UAAU,gBAAgBD,SAM7C,yBAAKC,UAAU,sBAAsBI,IAAI,uDAAuDC,IAAI,O,wCCKjGC,MAtBf,YAAkD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,SAAW,EACnBC,oBAAS,GADU,mBACtCC,EADsC,KAC/BC,EAD+B,KAI7C,OACI,yBAAKZ,UAAU,gBACX,yBAAKA,UAAU,yBACVW,EAAQ,kBAACE,EAAA,EAAD,CAAUC,SAAS,QAAQC,QAAS,SAAAC,GAAC,OAAIJ,GAAS,MAAc,kBAACK,EAAA,EAAD,CAAgBH,SAAS,QAAQC,QAAS,SAAAC,GAAC,OAAGJ,GAAS,MAChI,2BAAID,EAAQJ,EAAQ,EAAGA,IAE3B,yBAAKP,UAAU,yBACX,kBAACkB,EAAA,EAAD,CAASJ,SAAS,UAClB,2BAAIL,IAER,yBAAKT,UAAU,yBACX,kBAACmB,EAAA,EAAD,CAAOL,SAAS,UAChB,2BAAIN,MC2BLY,MA3Cf,YAQI,IAPAC,EAOD,EAPCA,SACAxB,EAMD,EANCA,SACAC,EAKD,EALCA,YACAC,EAID,EAJCA,KACAQ,EAGD,EAHCA,MACAE,EAED,EAFCA,SACAD,EACD,EADCA,OACD,EAC+BE,oBAAS,GADxC,mBACQY,EADR,KACiBC,EADjB,KAEOC,EAAWC,iBAAO,MAcxB,OACI,yBAAKzB,UAAU,SACX,2BACIA,UAAU,cACV0B,IAAKF,EACLT,QAlBS,SAAAC,GACbM,GACAE,EACKG,QACAC,QACLL,GAAW,KAEXC,EACKG,QACAE,OACLN,GAAW,KASPO,KAAK,OACL1B,IAAKiB,IAGT,kBAAC,EAAD,CACIxB,SAAUA,EACVC,YAAaA,EACbC,KAAMA,IACV,kBAAC,EAAD,CAAcQ,MAAOA,EAAOC,OAAQA,EAAQC,SAAUA,M,MCJnDsB,MAlCf,WACI,OACI,yBAAK/B,UAAU,OACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CACIqB,SAAS,2XACTxB,SAAU,YACVC,YAAa,qHACbC,KAAM,6BACNQ,MAAO,IACPE,SAAU,GACVD,OAAQ,KACZ,kBAAC,EAAD,CACIa,SAAS,6XACTxB,SAAU,YACVC,YAAa,yJACbC,KAAM,6BACNQ,MAAO,IACPE,SAAU,GACVD,OAAQ,KACZ,kBAAC,EAAD,CACIa,SAAS,2XACTxB,SAAU,YACVC,YAAa,8HACbC,KAAM,gBACNQ,MAAO,IACPE,SAAU,GACVD,OAAQ,OCnBRwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f65414f7.chunk.js","sourcesContent":["import React from 'react'\nimport './videofooter.css'\nimport {MusicNote} from '@material-ui/icons'\nimport Ticker from 'react-ticker'\nfunction VideoFooter({username, description, song}) {\n    return (\n        <div className=\"videoFooter\">\n            <div className=\"videoFooter__desc\">\n                <h5>@{username}</h5>\n                <p>{description}</p>\n                <div className=\"videoFooter__ticker\">\n                    <MusicNote className=\"videoFooter__icon\"/>\n                    <Ticker mode=\"smooth\">\n                    {({index}) => (\n                        <>\n                            <p className=\"ticker__text\">{song}</p>\n                        </>\n                    )}\n                    </Ticker>\n                </div> \n            </div>\n            <img className=\"videoFooter__record\" src=\"https://static.thenounproject.com/png/934821-200.png\" alt=\"\"/>\n        </div>\n\n       \n    )\n}\n\nexport default VideoFooter\n","import React, {useState} from 'react'\nimport './sidebar.css';\nimport {Favorite, FavoriteBorder, Message, Share} from '@material-ui/icons'\n\nfunction VideoSideBar({likes, shares, messages}) {\n    const [liked, setLiked] = useState(false);\n\n\n    return (\n        <div className=\"videoSidebar\">\n            <div className=\"videosidebar__options\">\n                {liked? (<Favorite fontSize=\"large\" onClick={e => setLiked(false)} />): (<FavoriteBorder fontSize=\"large\" onClick={e=> setLiked(true)}/>)}\n                <p>{liked ? likes + 1: likes}</p>\n            </div>\n            <div className=\"videosidebar__options\">\n                <Message fontSize=\"large\"/>\n                <p>{messages}</p>\n            </div>\n            <div className=\"videosidebar__options\">\n                <Share fontSize=\"large\"/>\n                <p>{shares}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default VideoSideBar\n","import React, {useState, useRef} from 'react'\nimport './video.css';\nimport VideoFooter from './VideoFooter';\nimport VideoSideBar from './VideoSideBar';\nfunction Video({\n    videoSrc,\n    username,\n    description,\n    song,\n    likes,\n    messages,\n    shares\n}) {\n    const [playing, setPlaying] = useState(false);\n    const videoRef = useRef(null);\n    const clickHandler = e => {\n        if (playing) {\n            videoRef\n                .current\n                .pause();\n            setPlaying(false)\n        } else {\n            videoRef\n                .current\n                .play();\n            setPlaying(true);\n        }\n    }\n    return (\n        <div className=\"video\">\n            <video\n                className=\"videoPlayer\"\n                ref={videoRef}\n                onClick={clickHandler}\n                loop=\"loop\"\n                src={videoSrc}>\n                \n                </video>\n            <VideoFooter\n                username={username}\n                description={description}\n                song={song}/>\n            <VideoSideBar likes={likes} shares={shares} messages={messages}/>\n        </div>\n    )\n}\n\nexport default Video\n","import React from 'react';\nimport Video from './Video';\nimport './app.css';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <div className=\"app__videoContainer\">\n                <Video\n                    videoSrc=\"https://v16m.tiktokcdn.com/dc17b984d6e4dd2fcea5250bbcda4a1c/5f44aa41/video/tos/useast2a/tos-useast2a-pve-0068/4e85a974822e46bdb878fbd6b3c102ef/?a=1233&br=2662&bt=1331&cr=0&cs=0&dr=0&ds=3&er=&l=202008230605530101890711490203A73A&lr=tiktok_m&mime_type=video_mp4&qs=0&rc=M2hueHY1bjk4dTMzZjczM0ApNDpkZGY8NmRoNzY6Mzc0OWdfMW1rZDNlYDVfLS0xMTZzcy8tYTZiLTQwYDViMzExNjA6Yw%3D%3D&vl=&vr=\"\n                    username={\"bravo.vfx\"}\n                    description={\"Deku 100% VFX to tease a bigger project Iâ€™m working on!! #fyp #foryou #edit #vfx #anime #myheroacademia #deku\"}\n                    song={'original sound - bravo.vfx'}\n                    likes={122}\n                    messages={20}\n                    shares={10}/>\n                <Video\n                    videoSrc=\"https://v16m.tiktokcdn.com/62924b7eadcf30558451d3fbb6798cb3/5f44ad32/video/tos/useast2a/tos-useast2a-ve-0068c001/b9ea7926739143cda198d485596cf001/?a=1233&br=1916&bt=958&cr=0&cs=0&dr=0&ds=3&er=&l=202008230618260101901760161E044A56&lr=tiktok_m&mime_type=video_mp4&qs=0&rc=anc4NXlnZGxldTMzaDczM0ApZDlkZTNoaTs8N2gzaTM7NGdiaXNrbXAvZzZfLS1jMTZzc18uYDY0NWJjNS1gMmIzNTA6Yw%3D%3D&vl=&vr=\"\n                    username={\"bravo.vfx\"}\n                    description={\"Some Bending VFX tests w/ @odesus @martincochingco @jonny.nickerson @_dkta // Check out my IG: @bravo.vfx #foryou #fyp #edit #avatar #thelastairbender\"}\n                    song={'original sound - bravo.vfx'}\n                    likes={650}\n                    messages={90}\n                    shares={10}/>\n                <Video\n                    videoSrc=\"https://v16m.tiktokcdn.com/cf2030264b5dbeefbc0e73c739c769f8/5f44ad50/video/tos/useast2a/tos-useast2a-pve-0068/fb6e0cfa2ba543429802c87bab3f5520/?a=1233&br=5510&bt=2755&cr=0&cs=0&dr=0&ds=3&er=&l=2020082306185601019017601603045D2F&lr=tiktok_m&mime_type=video_mp4&qs=0&rc=anM3NzdyOnN1dTMzOjczM0ApaGQ1OzhlZDs6NzhoaTk3ZmdvYHExbDAvcWVfLS1jMTZzc2JeXi1iXjItYTFhLWMwYzI6Yw%3D%3D&vl=&vr=\"\n                    username={\"bravo.vfx\"}\n                    description={\"Some Demon Slayer VFX / COSPLAY: @doublejcosplay #fyp #foryou #vfx #edit #anime #weeb #demonslayer #kimetsunoyaiba #tanjiro\"}\n                    song={'the best song'}\n                    likes={902}\n                    messages={10}\n                    shares={3}/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}